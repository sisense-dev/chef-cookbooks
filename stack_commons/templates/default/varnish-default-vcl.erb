<%- stackname = node['stack_commons']['stackname'] -%>
<%- if node['varnish']['version'] == '4.0' %>
vcl 4.0;

import directors;    # load the directors

<%- end %>
<%# the gsubs are needed because varnish doesn't like plaintext -%>
# sets up backends to ip-port combos that apache uses (populated data into an atribute)
<%- node[stackname]['varnish']['backends'].each do |ip, ip_data| -%>
<%-   ip_data.each do |port, port_data| -%>
<%#     port.values[0] should map to the vhost -%>
backend backend_<%= "#{ip.gsub(/\./, '_')}_#{port}" -%> {
  .host = "<%= ip -%>";
  .port = "<%= port -%>";
}

<%-   end -%>
<%- end -%>
<%# pulls out and merges a list of all hostnames we need to create load balancers for -%>
<%- hostnames = {} -%>
<%- node[stackname]['varnish']['backends'].each do |ip, ip_data| -%>
<%-   ip_data.each do |port, port_data| -%>
<%-     port_data.each do |hostname| -%>
<%-       hostnames.merge!({hostname[0] => hostname[1] }) -%>
<%-     end -%>
<%-   end -%>
<%- end -%>


<%- if node['varnish']['version'] == '4.0' %>

# configures load balancing between for each site...
<%- hostnames.each do |hostname, also_hostname| -%>
sub vcl_init {
    new <%= also_hostname.gsub(/[\.-]/, '_') -%> = directors.round_robin();
<%#   needed because we are now mapping ip/port to hostnames, not the other way around -%>
<%-   node[stackname]['varnish']['backends'].each do |ip, ip_data| -%>
<%-     ip_data.each do |port, port_data| -%>
<%-       if port_data.include?(hostname) -%>
    <%= also_hostname.gsub(/[\.-]/, '_') -%>.add_backend(backend_<%= "#{ip.gsub(/\./, '_')}_#{port}" -%>);
<%-       end -%>
<%-     end -%>
<%-   end -%>
}

<%- end -%>


# set up the routing of sites
sub vcl_recv {
<%- hostnames.each do |hostname, also_hostname| -%>
  if (req.http.host == "<%= also_hostname -%>" || req.http.host == "www.<%= also_hostname -%>") {
    set req.backend_hint = <%= also_hostname.gsub(/[\.-]/, '_') -%>.backend();
  }
<%- end -%>

}
<%- else %>

# configures load balancing between for each site...
<%- hostnames.each do |hostname, also_hostname| -%>
director <%= also_hostname.gsub(/[\.-]/, '_') -%> round-robin {
<%#   needed because we are now mapping ip/port to hostnames, not the other way around -%>
<%-   node[stackname]['varnish']['backends'].each do |ip, ip_data| -%>
<%-     ip_data.each do |port, port_data| -%>
<%-       if port_data.include?(hostname) -%>
  { .backend = backend_<%= "#{ip.gsub(/\./, '_')}_#{port}" -%>; }
<%-       end -%>
<%-     end -%>
<%-   end -%>
}

<%- end -%>

# set up the routing of sites
<%= 'sub vcl_recv {' unless hostnames.first.nil? %>
<%- hostnames.each do |hostname, also_hostname| -%>
  if (req.http.host == "<%= also_hostname -%>") {
    set req.backend = <%= also_hostname.gsub(/[\.-]/, '_') -%>;
  }

<%- end -%>

}
<%- end %>
